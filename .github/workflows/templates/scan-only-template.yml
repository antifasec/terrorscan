name: Scan Only Template

on:
  workflow_call:
    inputs:
      channel:
        description: "Channel name to scan"
        required: true
        type: string
      data_dir:
        description: "Directory name for storing data (lowercase)"
        required: true
        type: string

jobs:
  scan-channel:
    runs-on: ubuntu-latest
    environment: ColtonGranger

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run terrorscan for ${{ inputs.channel }}
        run: |
          python terrorscan.py deep-scan -c ${{ inputs.channel }} -d 5 -m 999 -mc 999 -o results
        continue-on-error: true
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_PHONE: ${{ secrets.TELEGRAM_PHONE }}
          TELEGRAM_SESSION_STRING: ${{ secrets.TELEGRAM_SESSION_STRING }}

      - name: Create scan result artifact
        if: success()
        run: |
          if [ -d "results" ] && [ "$(ls -A results 2>/dev/null)" ]; then
            # Create metadata for this scan
            SCAN_DATE=$(date +%Y%m%d)
            SCAN_TIME=$(date +%H%M%S)
            echo '{
              "channel": "${{ inputs.channel }}",
              "data_dir": "${{ inputs.data_dir }}",
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'",
              "scan_date": "'${SCAN_DATE}'",
              "scan_time": "'${SCAN_TIME}'",
              "run_number": "${{ github.run_number }}",
              "workflow_name": "${{ github.workflow }}"
            }' > results/scan_metadata.json

            # Create artifact with timestamp in filename
            tar -czf scan-results-${{ inputs.data_dir }}-${SCAN_DATE}-${SCAN_TIME}.tar.gz results/
            echo "Created scan artifact: scan-results-${{ inputs.data_dir }}-${SCAN_DATE}-${SCAN_TIME}.tar.gz"
          else
            echo "No scan results found, skipping artifact creation"
          fi

      - name: Upload scan result artifact
        if: success() && hashFiles('scan-results-*.tar.gz') != ''
        uses: actions/upload-artifact@v4
        with:
          name: scan-results-${{ inputs.data_dir }}-${{ github.run_number }}
          path: scan-results-*.tar.gz
          retention-days: 90