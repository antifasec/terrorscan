name: Scan Channel Template

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      channel:
        description: "Channel name to scan"
        required: true
        type: string
      data_dir:
        description: "Directory name for storing data (lowercase)"
        required: true
        type: string

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  scan-channel:
    runs-on: ubuntu-latest
    environment: ColtonGranger

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run terrorscan for ${{ inputs.channel }}
        run: |
          python terrorscan.py deep-scan -c ${{ inputs.channel }} -d 4 -m 99 -mc 99 -o results
        continue-on-error: true
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_PHONE: ${{ secrets.TELEGRAM_PHONE }}
          TELEGRAM_SESSION_STRING: ${{ secrets.TELEGRAM_SESSION_STRING }}

      - name: Prepare scan results for GitHub Pages
        run: |
          # Check if scan produced any results
          if [ ! -d "results" ] || [ -z "$(ls -A results 2>/dev/null)" ]; then
            echo "No scan results found for ${{ inputs.channel }}"
            exit 0
          fi

          # Create date-based directory structure
          YEAR=$(date +%Y)
          MONTH=$(date +%m)
          DAY=$(date +%d)
          TIMESTAMP=$(date +%H%M%S)
          TIMESTAMPED_DIR="pages_output/public/data/${{ inputs.data_dir }}/${YEAR}/${MONTH}/${DAY}/${TIMESTAMP}"

          # Create timestamped directory and copy results
          mkdir -p "${TIMESTAMPED_DIR}"
          cp -r results/* "${TIMESTAMPED_DIR}/"

          echo "Scan results prepared in ${TIMESTAMPED_DIR}"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./pages_output"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
