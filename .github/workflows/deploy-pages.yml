name: Deploy Network Visualization to GitHub Pages

on:
  # Trigger when scan workflows complete
  workflow_run:
    workflows: ["Scan nickjfuentes Channel", "Scan CharlieKirk Channel"]
    types: [completed]
  # Allow manual deployment
  workflow_dispatch:
  # Deploy on pushes to main (for visualization updates)
  push:
    branches: [main]
    paths: ['network-viz/**']

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout gh-pages branch for data
        run: |
          # Fetch gh-pages branch to get scan data
          git fetch origin gh-pages:gh-pages || echo "No gh-pages branch found"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: network-viz/package-lock.json

      - name: Install Node.js dependencies
        working-directory: network-viz
        run: npm ci

      - name: Copy latest scan data to visualization
        run: |
          # Create public directory if it doesn't exist
          mkdir -p network-viz/public/data

          # Check if gh-pages branch exists and has data
          if git show-ref --quiet refs/heads/gh-pages; then
            # Copy the latest scan data from gh-pages branch
            git show gh-pages:data/nickjfuentes/network_3d_latest.json > network-viz/public/data/nickjfuentes.json 2>/dev/null || echo "No nickjfuentes data found"
            git show gh-pages:data/charliekirk/network_3d_latest.json > network-viz/public/data/charliekirk.json 2>/dev/null || echo "No charliekirk data found"

            # Create a combined dataset if both exist
            if [ -f "network-viz/public/data/nickjfuentes.json" ] && [ -f "network-viz/public/data/charliekirk.json" ]; then
              echo "Creating combined dataset"
              # You could add logic here to merge the JSON files if needed
              # For now, just use the most recent one as the default
              cp network-viz/public/data/nickjfuentes.json network-viz/public/crawl-network.json
            elif [ -f "network-viz/public/data/nickjfuentes.json" ]; then
              cp network-viz/public/data/nickjfuentes.json network-viz/public/crawl-network.json
            elif [ -f "network-viz/public/data/charliekirk.json" ]; then
              cp network-viz/public/data/charliekirk.json network-viz/public/crawl-network.json
            fi
          else
            echo "No scan data found - using existing data if available"
          fi

      - name: Build visualization
        working-directory: network-viz
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./network-viz/dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4